[
    {
        "id_": "c35c21ea-a46b-4099-852d-792ba1134853",
        "text": "# 1 Introduction\n\nAgriculture is the largest consumer of freshwater globally, accounting for 70% of the total supply [1]. The growing freshwater scarcity crisis, intensified by climate change and rapid population growth, has placed significant strain on global freshwater resources. While agriculture is significantly affected by this scarcity, it also contributes to the problem through its extensive water use. To address this challenge, implementing efficient water management strategies in agricultural irrigation is essential for mitigating the water scarcity problem and ensuring the sustainability of the agricultural sector. Closed-loop irrigation scheduling, which utilizes feedback to provide precise water amounts to crops at optimal times, has emerged as a promising solution for achieving efficient water management in irrigation.\n\nScheduling, in general, involves the optimal allocation of finite resources over a specified time horizon to achieve a particular objective. Irrigation scheduling, typically conducted on an hourly or daily basis, is important for determining the optimal amount of water to supply to crops and the appropriate timing for irrigation. In the context of daily irrigation, which is the primary focus of this work, the objective is to identify the specific days within a given scheduling horizon on which irrigation should be performed and to determine the precise amount of water to be applied during each irrigation event. Recently, irrigation scheduling approaches have evolved to incorporate management zones (MZs) in their designs. MZs are defined as distinct areas within a large-scale field characterized by uniform soil and crop properties. By integrating MZs, irrigation scheduling schemes can better account for the significant spatial variability present in agricultural fields. When daily irrigation scheduling is required for a field with multiple MZs, the task expands to determining the specific days within the scheduling horizon for irrigation events and identifying the optimal irrigation amounts for each MZ.\n\nBy definition, addressing the daily irrigation scheduling problem involves discrete decision-making, particularly in determining which days within the scheduling horizon should be designated for irrigation. This discrete decision-making process can be represented by assigning a binary decision variable to each day within the scheduling horizon. A value of 1 indicates that irrigation should be performed on that specific day, while a value of 0 signifies that no irrigation should occur. Alongside these discrete decisions regarding the timing of irrigation, continuous decisions must also be made concerning the precise amounts of water to be applied to the various MZs on the days when irrigation is scheduled. To effectively manage both discrete and continuous decisions, and to"
    },
    {
        "id_": "52709cf5-68a5-4b43-ae10-1d81f3fa22b2",
        "text": "# Mixed-Integer MPC for Irrigation Scheduling\n\nLeverage the success of model predictive control (MPC) in addressing scheduling problems across various domains [2, 3, 4, 5, 6], mixed-integer MPC has emerged as an attractive optimal control framework for solving the daily irrigation problem.\n\nMixed-integer MPC for irrigation scheduling, initially proposed in [7], leverages agro-hydrological models such as the Richards’s equation, water-balance models, which describe soil moisture dynamics in agricultural fields, to determine irrigation schedules. These schedules involve ‘yes/no’ decisions for irrigation timing and continuous decisions for irrigation amounts, aiming to maintain soil water content within an optimal range to promote crop growth while minimizing both fixed and variable costs associated with the irrigation process. This optimal control framework has been evaluated under various weather conditions and irrigation management practices, demonstrating its ability to conserve irrigation water while enhancing crop yield compared to the widely used triggered irrigation scheduling approach. However, despite its promise, several near-term improvements, particularly in enhancing the computational efficiency of the mixed-integer MPC-based scheduler, are necessary to facilitate its adoption in practical irrigation settings.\n\nMixed-integer problems are classified as NP-hard. Consequently, despite advancements in optimization techniques and computing power, directly applying mixed-integer solvers to the mixed-integer problems arising in mixed-integer MPC-based irrigation scheduling is only feasible for small-scale scenarios. The requirement to generate irrigation schedules within a reasonable time frame, coupled with the need to extend mixed-integer MPC formulations to fields comprising several MZs, necessitates the development of efficient solution methods.\n\nSeveral approaches have been proposed to address the computational challenges associated with mixed-integer MPC-based schedulers. Notably, the initial work [7] that introduced mixed-integer MPC for daily irrigation scheduling employed two key strategies to enhance computational efficiency. First, instead of directly using a mechanistic agro-hydrological model, such as the Richards equation—which was found to render the mixed-integer MPC framework intractable for moderate prediction horizon values—a long short-term memory (LSTM) network representation of the agricultural field was utilized within the mixed-integer MPC framework. The use of this surrogate model significantly improved the computational efficiency of the framework. To further enhance efficiency, the study proposed an approach that transformed the mixed-integer nonlinear problem (MINLP) resulting from the MPC formulation into a nonlinear program (NLP). Specifically, the logistic sigmoid function was employed to represent the binary decision variables. This transformation from MINLP to NLP enabled the problem to be solved within a reasonable time frame while."
    },
    {
        "id_": "ebeedbda-d474-4850-82ba-aa8dc5ee7157",
        "text": "# Current Research on Mixed-Integer MPC-Based Irrigation Scheduling\n\nAlso accommodating multiple MZs in the framework. However, despite these benefits, the use of the logistic sigmoid function introduced challenges, including approximation errors and difficulties in result interpretability. Determining the appropriate slope for the sigmoid function proved to be nontrivial, and large slopes often led to ill-conditioned optimization problems.\n\nTwo recent studies [8, 9] have leveraged the success of reinforcement learning (RL), particularly multi-agent RL (MARL), to enhance the computational efficiency of mixed-integer MPC-based irrigation schedulers. In these approaches, multiple RL agents were trained for the various MZs within the field. These agents were tasked with determining the irrigation timing across the scheduling horizon, allowing decentralized MPCs with continuous controls to be used for calculating the irrigation amounts for each MZ. These RL-based approaches effectively addressed the interpretability issues associated with the logistic sigmoid function and facilitated the use of parallel computing to solve the decentralized MPCs, thereby improving overall computational efficiency.\n\nWhile these RL-based approaches have shown promise in enhancing computational efficiency and addressing interpretability issues, they come with some limitations. One notable challenge is the significant computational resources required for training multiple RL agents, particularly in fields with a large number of MZs. The complexity of the training process can lead to prolonged training times and increased computational costs. Moreover, if there is a need to redesign the reward function, which is common for irrigation scheduling since different management practices which affect the reward of the agents have to be carried out during a particular growing season, the agents must be retrained, which can be a time-consuming process. Given the downsides associated with using RL agents to address the computational challenges of mixed-integer MPC-based schedulers, exploring efficient solution approaches that do not rely on RL remains of vital importance.\n\nAs previously mentioned, the objective of the mixed-integer MPC-based irrigation scheduler—to maintain root zone soil moisture within an optimal range while minimizing fixed and variable irrigation costs—is typically modeled with a quadratic cost function. However, the nonlinear nature of the models used to describe soil moisture dynamics—such as the Richards equation or an LSTM network representation—results in a MINLP. By exploring surrogate models that can be represented with linear constraints, it is possible to reformulate the problem as a Mixed-Integer Quadratic Program (MIQP), which is a simpler and more tractable class of MINLPs.\n\nA ReLU (Rectified Linear Unit) network is a neural network where the ReLU activation function is applied to the neurons, except for those in the output layer. These networks have been used to model complex relationships and have been found to outperform other activation functions, such as..."
    },
    {
        "id_": "9e8480e2-1df5-428a-ae47-e7928501d3eb",
        "text": "# Enhancing Computational Efficiency of Mixed-Integer MPC-Based Irrigation Schedulers\n\nAs the sigmoid function, in deep neural networks [10]. ReLU networks have achieved the best results on various benchmark problems across different domains (e.g., [11, 12, 13]), including in the modeling of soil moisture dynamics [14, 15].\n\nReLU networks are composed of max-affine spline operators and are piecewise-linear and continuous functions [16]. This characteristic allows a ReLU network to be exactly represented by a set of mixed-integer linear (MIL) constraints. An exact MIL formulation of a ReLU network can be achieved by representing each ReLU operator with a binary variable and applying the big-M method. The MIL formulation has been employed to enhance computational efficiency in optimization problems that embed ReLU neural networks, including applications such as learning the region of attraction of nonlinear systems [17], chemical process optimization [18], and optimizing the operation of monoclonal antibody production [19]. Despite the advancements in model predictive control-based irrigation scheduling, the literature has yet to exploit the MIL formulation of ReLU neural networks to enhance the computational efficiency of these schedulers. Furthermore, existing research on mixed-integer MPC-based schedulers has not explored the potential of using the MIL formulation of ReLU networks to improve the computational efficiency of mixed-integer MPC-based irrigation schedulers.\n\nThe main contribution of this work is to enhance the computational efficiency of mixed-integer MPC-based irrigation schedulers by leveraging the MIL formulation of ReLU networks. In this approach, the model representing soil moisture dynamics within the MPC framework is replaced with a ReLU neural network. By utilizing the MIL formulation of the ReLU network, and given that the cost function of the MPC framework is quadratic, the resulting problem is a MIQP, for which global optimization solutions exist [20, 21]. This MIQP formulation is then solved to determine the daily irrigation schedules, including both the timing and the irrigation amounts for the various MZs within the field.\n\nAdditionally, a comparative study is conducted over two growing seasons on a large-scale, spatially variable field to demonstrate that the proposed approach significantly enhances the computational efficiency of mixed-integer MPC-based irrigation schedulers compared to those utilizing an LSTM network representation of the field model. The comparison with the LSTM model is justified by its established ability to improve computational efficiency over traditional models like the Richards equation, while also maintaining superior water-saving performance compared to the widely used triggered irrigation scheduling method. Furthermore, the study includes a comparison with the triggered irrigation scheduling scheme to provide a basis for adopting the mixed-integer."
    },
    {
        "id_": "264b6e9c-00d2-4041-94ce-840e3d277633",
        "text": "# MPC with ReLU surrogate model in practical irrigation scheduling settings"
    },
    {
        "id_": "2a07db71-1500-4876-9776-63b52bf7604e",
        "text": "# 2 System Description\n\n|Soil Type B|Crop Type B|Crop Type A|\n|---|---|---|\n|Soil Type A|Soil Type A|Soil Type A|\n|MZ 1|MZ 2|MZ|\n|Delineation|Delineation| |\n|MZ 3|MZ 4| |\n\nFigure 1: A schematic diagram of a spatially variable field with variability in crop and soil. The field is divided into 4 distinct MZs, each with uniform soil and crop properties.\n\nThe system studied in this work is a large-scale agro-hydrological field characterized by significant spatial variability in attributes such as soil type, crop type, and elevation. To account for this spatial variability, the field is divided into distinct MZs. Figure 1 illustrates a field with variability with respect to soil and crop. Given the presence of 2 soil types and 2 crop types, and considering that each MZ should have similar soil and crop properties, the field is delineated into 4 distinct MZs based on these attributes.\n\nThe proposed soil moisture modeling framework is particularly well-suited for a delineation approach that incorporates key attributes such as elevation and soil hydraulic parameters. Elevation influences the movement and distribution of water across agricultural fields, thereby affecting irrigation efficiency. Similarly, soil hydraulic parameters directly impact soil moisture dynamics and plant available water. A delineation approach that incorporates soil hydraulic parameters allows for the use of mechanistic models, which rely on these parameters as key inputs, to accurately model soil moisture dynamics within the various MZs. Additionally, incorporating elevation ensures that the resulting MZs have relatively flat profiles, enabling the use of mechanistic models that focus on vertical soil moisture dynamics while ignoring lateral movements.\n\nThe MZs in large-scale fields are generally known to exhibit weak interactions with each other, meaning that the impact of adjacent zones on each other’s moisture dynamics is minimal."
    },
    {
        "id_": "82ae4974-2bf9-4eb2-8f69-affcccf4857c",
        "text": "# Soil Moisture Dynamics Modeling\n\nThis phenomenon, the soil moisture dynamics can be modeled independently for each MZ in the field.\n\nIn this study, the soil moisture dynamics in each MZ is modeled using the 1D version of the Richards equation in the axial direction. The Richards equation [22] is a mechanistic model that accounts for various hydrological processes, including irrigation, rain, evapotranspiration, infiltration, root-water extraction, and surface runoff, and it has proven successful in describing soil moisture dynamics in agricultural fields [23].\n\nThe 1D Richards equations used to model the soil moisture dynamics in the different MZs are calibrated with soil hydraulic parameters representative of their respective zones. For example, when clustering techniques are employed for MZ delineation, the soil hydraulic parameters for calibrating the 1D Richards equation can be those occurring at the centroid of the various clusters/MZs.\n\nThe 1D version of the Richards equation is expressed mathematically as:\n\nεω ε [K(ω)( εω )]\nC(ω) εt = εz εz + 1 → ϑ(ω)R (K c , ET 0 , z ) r (1)\n\nIn Equation (1), ω (m) is the capillary pressure head, K(·) (m·s−1) is the unsaturated hydraulic water conductivity and C(·) (m−1) is the capillary capacity. The term ϑ(·) (→) is a dimensionless stress water factor, R(·) is the root water uptake model which is a function of the crop coefficient Kc (→), the reference evapotranspiration ET0 (m·s−1), and the rooting depth zr (m). For a detailed description of the functions K(·) and C(h), readers are referred to [24]. Similarly, for a thorough description of ϑ and R, readers are referred to [25].\n\nThe following boundary conditions are imposed for the numerical solution of the 1D Richards equation:\n\nε(ω + z)\nεz ∣∣∣∣ z=H z = 1 (2)\n\nεωεz∣∣∣∣ z=0 = →1 → uirr K(ω)→ EV (3)\n\nwhere Hz (m), uirr (m·s−1), and EV (m·s−1) in Equations (2) and (3) represent the depth of the soil column, the irrigation amount and the evaporation rate, respectively. A detailed discussion of the numerical solution of Equation (1) is omitted. Interested readers are referred to [26] for an in-depth discussion on the method of lines (MOL) numerical approach, which is employed in this work to solve the 1D Richards equation."
    },
    {
        "id_": "41f45728-647b-4702-b549-e1bdb7fa7af3",
        "text": "# Soil Moisture Dynamics\n\nAfter solving Equation (1) to obtain ω, the corresponding volumetric soil moisture content ϖv can be calculated as follows:\n\nϖv(ω) = ϖr + (ϖs → ϖr) 1 + (→ϱω)n (4)\n\nwhere ϖs and ϖr denote the saturated and residual soil moisture contents, respectively. The terms ϱ and n are curve fitting parameters used to characterize the soil water retention curve. The saturated hydraulic conductivity K, along with ϖs, ϖr, ϱ, and n are the relevant soil hydraulic parameters needed to solve the Richards equation. In this work, these 5 parameters are collectively denoted as ω = [Ks, ϖs, ϖr, ϱ, n].\n\nAfter applying the MOL numerical approach, the 1D Richards equation can be expressed in state-space form as:\n\nxk+1 = F(xk, uk, ω) + ςk (5)\n\nyk = H(xk, ω) + vk (6)\n\nwhere xk ∈ RNx represents the state vector containing Nx capillary pressure head values for the spatial nodes in Hz. In Equations (5) and (6), F and H represent the system dynamics and output function, respectively. The input vector uk contains irrigation amount, precipitation, reference evapotranspiration, the crop coefficient, and the rooting depth. The terms ςk and vk denote the uncertainties in the state and output equations, respectively. In this work, the volumetric water content ϖv is denoted as the output yk, making Equation (6) a general representation of Equation (4). Consequently, yk ∈ RNy represents the output vector containing Ny = Nx volumetric soil moisture content values for the corresponding spatial nodes in Hz.\n\nGiven that the soil moisture dynamics are modeled independently for the MZs, for a field with M MZs, the state vector Xk ∈ RNx×M and the output vector Yk ∈ RNy×M can be compactly represented as follows:\n\n| | |\n|---|---|\n|xk+1,1|F(xk,1, uk,1, ω1) + ςk,1|\n|xk+1,2|F(xk,2, uk,2, ω2) + ςk,2|\n|...|...|\n|xk+1,M|F(xk,M, uk,M, ωM) + ςk,M|"
    },
    {
        "id_": "05260a09-7350-47c5-ba57-edd4b157c253",
        "text": "|Y k =|<br/>y k,2|y k,1|\n|---|---|---|\n|H(x k,1 , ω 1 ) + v k,1|H(x k,2 , ω 2 ) + v k,2|\n|...|...|\n|y k,M|H(x k,M , ω M ) + v k,M|\n\nwhere ω i represents the set of hydraulic parameters that are representative of the soil type in MZ i. Additionally, x k,i, u k,i and y k,i represent the state, input and output vectors of MZ i at time instant k, while ς k,i and v k,i represent the uncertainties in the state and output equations, respectively."
    },
    {
        "id_": "dbd49a66-bbf9-4d93-8bbe-379feb1dfde8",
        "text": "# 3 Problem Formulation\n\nThis work addresses the daily irrigation scheduling problem for a large-scale agricultural field delineated into distinct irrigation MZs. The objective is to develop a scheduling framework that determines both the irrigation timing (which is encoded with a binary variable) and the specific irrigation application amounts for each zone. The problem is formulated as follows:"
    },
    {
        "id_": "38595c00-d3af-410d-a141-086b66217b21",
        "text": "# Given:\n\n- Scheduling Horizon: The known number of days for which the irrigation needs to be scheduled.\n- Management Zones (M): The field is divided into M distinct MZs.\n- Weather Predictions: Daily predictions of reference evapotranspiration and precipitation, essential for determining the water needs of crops.\n- Crop Information: This includes the crop coefficient, derived from empirical relations calibrated specifically for the crop and field under study.\n- Soil Moisture Content: The initial distribution of soil moisture content within the rooting depth across each MZ at the start of the scheduling horizon."
    },
    {
        "id_": "975feec8-a2bc-4b7d-aa13-f052f8fab0c9",
        "text": "# Determine:\n\n- Irrigation Timing: The days within the scheduling horizon on which irrigation should be performed. In line with standard irrigation practices, the timing should be uniform across all MZs of the field."
    },
    {
        "id_": "a203e49b-7f27-41d8-b1f2-7253bdc0b49e",
        "text": "# Irrigation Amounts:\n\nThe daily irrigation amount for each MZ on each day within the scheduling horizon. The scheduler should ensure that the irrigation amounts align with the timing—prescribing zero irrigation amounts on days when irrigation should not be performed and non-zero amounts on days when irrigation is scheduled."
    },
    {
        "id_": "c1780bea-0e6a-4f58-89de-e33349531f19",
        "text": "# 4 Mixed-Integer MPC for Daily Irrigation Scheduling\n\nA mixed-integer MPC with zone control (zone objectives), as originally proposed in [7], is presented to address the daily irrigation scheduling problem. This MPC formulation uses discrete (binary) controls to encode the irrigation timing and continuous controls to determine the irrigation amounts that ought to be applied to the various MZs that make up the field. The scheduler’s objective is to provide irrigation schedules that maintain the root zone soil moisture content in each MZ within an optimal range, ensuring optimal crop development. Additionally, the scheduler seeks to minimize the fixed and variable costs associated with the irrigation events.\n\nFor scheduling horizon N, the scheduler PN,M(d) for a field with M MZs is formulated for a particular day d as follows:\n\nE, E, U, c\n\nmin ∑k=d+1∑j=1 [ ¯ j ¯2 ] ∑k=d∑j=1 R uuirr ∑M\n\nQ φk,j + Qj φ2 + ∑k=d R ck + ck,j\n\n(9a)\n\ns.t.\n\nxk+1,j = F(xk,j, uuirr, ˆk, ωj),\n\nk,j ↑ [1, M], k ↑ [d, d + N → 1] (9b)\n\nyk,j = H(xk,j, ωj)\n\nj ↑ [1, M], k ↑ [d + 1, d + N] (9c)\n\nϖk,j RZ = M(yk,j)\n\nj ↑ [1, M], k ↑ [d + 1, d + N] (9d)\n\nxd,j = ˆj(d), x\n\nj ↑ [1, M] (9e)\n\n↼ j → φk,j ↓ ϖk,j RZ↓ ¯ j + ¯ k,j, ↼ φ\n\nj ↑ [1, M], k ↑ [d + 1, d + N] (9f)\n\nck uuirr j ↓ uk,j↓ ck uj irr ¯irr,\n\nj ↑ [1, M], k ↑ [d, d + N → 1] (9g)\n\nck ↑ {0, 1},\n\nk ↑ [d, d + N → 1] (9h)\n\nφk,j ↔ 0, ¯k,j ↔ 0, φ\n\nj ↑ [1, M], k ↑ [d + 1, d + N] (9i)\n\nwhere E:= [¯ 1 , ¯ 2 , ..., ¯ M ], E ¯ ε ε ε := [ε 1 , ε 2 , ..., ε M ], U := [u1 irr, u2 irr, ...., uM irr], ¯ (·) := [¯ d+1 , ¯ d+2 , ..., ¯ d+N ], ε φ φ φ ε (·) := [φ d+1 , φ d+2 , ..., φ d+N ], c := [cd, cd+1, ..., cd+N →1], u(·irr) := [ud irr, ud+1, ..., uirrN →1]."
    },
    {
        "id_": "88587576-d46d-4264-b036-e6b4fe75896a",
        "text": "φ (·) and ¯ (·) φ are slack variables that are introduced to relax the target zone (↼ (·), ↼¯ (·)). For a MZ j, the maximum and minimum irrigation amounts that can be supplied during a particular irrigation event are denoted with ¯ (·uirr) and u (·) irr, respectively. The binary variable c k is used in P N,M (d) to encode the irrigation timing, indicating whether the irrigation event should be performed on day k within N. Equation (9g) ensures that the irrigation timing is applied uniformly across the M MZs that make up the field, in accordance with the daily irrigation scheduling problem. The terms Q (·) and ¯ (·) Q are the per-unit costs associated with the violation of the lower and upper bounds of the target zone, respectively. The term R c is the fixed cost associated with the operation of the irrigation system, and R u is the per-unit cost of the irrigation amount uirr. The term ˆ k u denotes the uncontrollable inputs (namely the reference evapotranspiration, rain, crop coefficient and rooting depth) for day k, while M(·) is a linear function used to calculate the root zone soil moisture content (ϖ RZ) in each MZ. This calculation considers the spatial distribution of soil moisture (y) in the soil column of each MZ. The weighting approach applied assigns 40% weight to the average volumetric moisture content in the upper quarter of the rooting depth (z r), 30% to the second quarter, 20% to the third quarter, and 10% to the last quarter. Note that this weighting approach reflects the relative importance of moisture at different depths within the rooting depth. According to Equation (9e), the initial states, in each MZ, required for the evaluation of P N,M (d), are estimated. Specific details concerning the estimation of the initial soil moisture content are provided in Section 7.1."
    },
    {
        "id_": "c51da3a2-465d-4a97-a660-0a8f1e826aef",
        "text": "# Equations\n\nThe terms ¯ j and ↼ j (also known as the threshold volumetric moisture content ϖ j th) are calculated as follows:\n\n|↼¯ j|=|ϖ jFC|\n|---|---|---|\n|↼ j|=|ϖ j TH= ϖ j FC→ [MAD ↗ ϖ j FC→ ϖ jWP|\n\nwhere ϖ j FC is the volumetric moisture content at field capacity for MZ j, ϖ j WP represents the volumetric water content at the wilting point for MZ j, and MAD refers to the management allowable depletion, which indicates the fraction of the total available water that is permitted to be depleted.\n\n11"
    },
    {
        "id_": "124fa265-7fe1-468c-a146-362f08cb81e2",
        "text": "# Enhancing the Computational Efficiency of P N,M (d) Using a ReLU Neural Network\n\nWhile P N,M (d) provides an optimal control framework for addressing the daily irrigation scheduling problem comprehensively, it presents significant computational challenges. These challenges primarily stem from the inherent complexity of mixed-integer problems. Moreover, using the Richards equation to represent soil moisture dynamics in P N,M (d) adds further complexity. The Richards equation is a highly nonlinear partial differential equation, and its nonlinearity, combined with its dependence on complex soil hydraulic functions, makes it computationally expensive to solve, particularly when integrated into optimization frameworks. Additionally, the numerical solution of the Richards equation requires discretization in both time and space, transforming it into a large system of algebraic equations. This discretization increases the problem’s dimensionality. These complexities are further compounded when P N,M (d) is applied to large-scale fields with multiple MZs, where numerous variables must be considered simultaneously.\n\nPast studies seeking to enhance the computational efficiency of P N,M (d) have explored replacing the Richards equation with machine learning surrogate models like LSTM networks.\n\nTo further enhance the computational efficiency of P N,M (d), this work proposes using a feed-forward ReLU neural network to model soil moisture dynamics in each MZ of the field, instead of machine learning surrogate models like the LSTM network, for two main reasons. First, compared to the Richards equation, which is highly nonlinear and requires complex functions for its numerical solution, the ReLU network is a simpler model. Therefore, replacing the Richards equation with a ReLU neural network in P N,M (d) can potentially reduce the solution time.\n\nSecond, a feedforward ReLU neural network can be exactly represented using MIL constraints. Incorporating the MIL constraint representation of the ReLU neural network within P N,M (d) further enhances computational efficiency. Notably, the cost function of P N,M (d) is quadratic, and, except for the constraints describing soil moisture dynamics across the MZs (i.e. Equations (9b) and (9c)), all other constraints in P N,M (d) are linear. Therefore, adopting a MIL representation of the ReLU neural network transforms the problem into a MIQP problem, which is the simplest class of MINLP problems. The resulting MIQP problem can then be solved using solvers such as Gurobi.\n\nBased on the foregoing, this section describes how feedforward ReLU neural networks, which model the soil moisture dynamics in the various MZs of the field, can be trained and integrated into P N,M (d) to enhance its computational efficiency. The section begins with an overview of ReLU"
    },
    {
        "id_": "8b4bf361-8dc6-44fb-853b-c26f697855d9",
        "text": "# 5.1 MIL representation of ReLU Neural Networks\n\nA ReLU neural network is a feedforward neural network where the ReLU activation function is applied to the neurons, except for the neurons in the output layer. Mathematically, a ReLU neural network can be represented as follows:\n\nZ0 = X\n\nZω+1 = max (Wω Zω + b , 0) , ω = 0, 1, ..., L → 1\n\nFNN (X ) = WL ZL + bL\n\nwhere Z0 ∈ Rn0 is the input to the ReLU neural network, Zω+1 ∈ Rnω+1 is the output vector of the (ω + 1)-th hidden layer, which has nω+1 neurons. The output of the network is denoted with FNN (X ) ∈ RnL+1, and Wω ∈ Rnω+1 × nω, bω ∈ Rnω+1 are the weight and bias vectors of the (ω + 1)-th hidden layer.\n\nFor the (ω + 1)-th hidden layer in the ReLU neural network described in Equation (12), let Uω and Uω be the element-wise lower and upper bounds on the input i.e. ¯Uω ≤ W Zω + bω ≤ Uω. The ReLU activation function is equivalent to the following set of MIL constraints [27]:\n\nZω+1 = max (Wω Zω + bω, 0)\n\nZω+1 ≤ Wω Zω + bω → diag(Uω) (1 → eω)\n\nZω+1 ≥ 0\n\nZω+1 ≤ diag(Uω) (eω)\n\nwhere eω ∈ {0, 1}nω+1 is a vector of binary variables for the (ω + 1)-th activation layer. Given that input to the ReLU neural network is bounded, the interval bound propagation approach [28] is used to determine the tight bounds [Uω, ¯Uω] on the input to each ReLU unit, so as to reduce numerical issues and enhance solution times."
    },
    {
        "id_": "f3e808c1-0223-4b3c-b990-b72173391ee7",
        "text": "# 5.2 ReLU Network Development\n\nThis section details the development of a ReLU neural network for modeling soil moisture dynamics across each MZ of the field. It begins with an overview of the ReLU neural network architecture designed for each MZ, followed by a discussion on the generation of the training data used for neural network training. The section concludes with a description of the methodology employed to evaluate the predictive performance of the trained neural network."
    },
    {
        "id_": "a87f1b82-c716-4a78-a769-411fb63d1211",
        "text": "# 5.2.1 ReLU Neural Network Design\n\nFor each MZ, a ReLU network is trained to make daily predictions of the root zone volumetric moisture content. In this work, the universal approximation property of neural networks is leveraged to directly model the root zone soil moisture (a scalar value), which is calculated as a weighted sum (i.e. the linear function M(·) in P N,M (d)) of the soil moisture contents at various depths in the soil column. This approach differs from existing soil moisture surrogate modeling methods, such as the one presented in [29], where multiple neural networks are trained to predict soil moisture dynamics at different depths, and the root zone soil moisture is subsequently computed as a weighted sum of these individual predictions. The proposed ReLU neural network approach offers a more compact model that can further enhance the computational efficiency of P N,M (d).\n\nIn particular, the ReLU neural network is trained to make one-day-ahead root zone soil moisture content predictions. To make these predictions, it employs both current (k) and past inputs (k → 1, k → 2, ..., k → l), where l represents the time lag (in days). The specific inputs to the network include the root zone volumetric water content ϖRZ, precipitation I (the sum of rain R and irrigation amount), crop coefficient Kc, reference evapotranspiration ET0, and the rooting depth zr.\n\nϖRZk+1 = N ({⇀} kk→l, ⇁) (14)\n\nwhere {⇀} kk→l := [⇀ k→l , ⇀ k→l→1 , .., ⇀ k ], ⇀ ↑ [ϖRZ, Kc, ET0, I, zr] and I = uirr + R. In Equation (14), ⇁ is a compact representation of the weights and biases of the ReLU neural network N.\n\nBased on Equation (14), the input vector to the ReLU network contains 5(l + 1) elements, and its output contains 1 element. Thus, the terms n0 and nL+1 defined in Section 5.1 are equal to 5(l + 1) and 1, respectively.\n\nSince the ReLU neural network directly models the root zone soil moisture content in each zone, Equation (14) approximates and replaces Equations (9b), (9c), and (9d) in P N,M (d). Furthermore,"
    },
    {
        "id_": "a17c40b0-d8f2-47c3-b4f8-6a6bb4ac4ea4",
        "text": "# 5.2.2 Training Data Generation\n\nIn this study, open-loop simulated data from the calibrated 1D Richards equation for each MZ are used to train a ReLU neural network specific to that MZ. The calibration process involves using soil moisture observations from the field to estimate the soil hydraulic parameters, which are then employed to calibrate the Richards equation. This calibration ensures that the resulting Richards equation accurately describes the soil moisture dynamics of the field.\n\nFor a carefully chosen initial state—specifically, the converged soil moisture estimates from an offline data assimilation process in this work—the training dataset is generated by solving Equations (5) and (6) for randomly generated input uk trajectories. Noise is included in the open-loop simulations to account for model uncertainty and to enhance the robustness of the neural network. The use of randomly generated inputs is employed to ensure that the resulting time series dataset encompasses the dynamics of soil moisture under a wide range of conditions.\n\nNote that since the ReLU neural network is trained to directly predict the root zone soil moisture content, the function M outlined in formulation PN,M(d), together with the spatial volumetric moisture content at each time instant, is used to calculate the corresponding root zone soil moisture content for the training dataset before the ReLU neural network is trained."
    },
    {
        "id_": "65cae381-800c-4ce9-9589-00efd896d057",
        "text": "# 5.2.3 ReLU Neural Network Evaluation\n\nTo evaluate the predictive performance of the trained ReLU neural network, a comparison with the calibrated Richards equation is conducted. In this study, a specific initial state is chosen, and predetermined trajectories of the inputs uk are defined for a given period.\n\nBoth the identified ReLU neural network and the calibrated 1D Richards equation are then simulated using the selected initial state and predetermined input trajectories. The predictions from the ReLU neural network are compared to the root zone soil moisture content computed by the calibrated Richards equation, using the root mean squared error (RMSE) metric."
    },
    {
        "id_": "df135b5b-6567-4266-b459-50681526a668",
        "text": "# 6 Study Area\n\nThe mixed-integer MPC scheduler with ReLU neural network was applied to a specific quadrant of a large-scale circular field, highlighted by the red rectangle in Figure 2(a). This study area"
    },
    {
        "id_": "e71b69a2-e76f-45ab-a60d-94588cf060c7",
        "text": "# Research Farm"
    },
    {
        "id_": "755b32df-f589-4ea9-91fd-9e3f408fef04",
        "text": "# Study Area\n\nFigure 2: Study area and its management zone map.\n\nis located at a Research Farm in Lethbridge, Alberta, Canada. The field is equipped with a variable-rate center pivot irrigation system, spanning a length of 294 meters, to facilitate irrigation management. The application considered that spring soft wheat was cultivated in the study area.\n\nBefore applying the scheduler, the investigated quadrant was delineated into MZs using a three-stage delineation method originally proposed in [9]. This method incorporated elevation and soil hydraulic parameters, utilizing the k-means clustering technique for MZ delineation. The soil hydraulic parameter attributes were derived from an offline data assimilation method, which integrated remotely sensed soil moisture observations into the cylindrical coordinate version of the Richards equation using the extended Kalman filter. For specific details on the data assimilation approach, interested readers may refer to [30]. Figure 2(b) shows the three distinct MZs identified in the investigated quadrant."
    },
    {
        "id_": "11223bff-6d51-4096-903b-ca4ffb8f4111",
        "text": "# 6.1 Surrogate Modeling of the Study Area\n\nPrior to generating the open-loop data for training the 3 ReLU neural networks for P N,M (d), the soil moisture dynamics in each of the three MZs of the study area were modeled using the 1D Richards equation. For each MZ, the 1D Richards equation was calibrated with the centroidal soil hydraulic parameters specific to that zone. Subsequently, extensive open-loop simulations of these calibrated Richards equations were conducted, incorporating randomly generated inputs.\n\nThe neural network training stage incorporated two different rooting depths: 0.5 m and 1.00 m."
    },
    {
        "id_": "fbd17ef3-d621-46a2-9f42-275ef73b7fad",
        "text": "# Performance Evaluation\n\nTwo main studies were conducted to assess the performance of the mixed-integer MPC with the ReLU neural network scheduler. In the first study, referred to as Case Study 1, the computational benefits of employing the ReLU neural network were investigated. In this study, the mixed-integer MPC with the ReLU neural network was used to provide irrigation schedules for the 2015 and 2022 growing seasons, which were specifically chosen to assess the schedulers under relatively dry and wet conditions, respectively. The reference evapotranspiration and the average temperature trajectories for the 2015 and 2022 growing seasons are depicted in Figure 6 of Appendix D.1.\n\nSimilarly, the mixed-integer MPC incorporating the LSTM network, originally proposed by [7], was also employed to generate schedules for the same growing seasons. This approach was chosen for two key reasons: first, the LSTM-based framework was found to significantly enhance computational efficiency compared to the use of the Richards equation PN,M(d); second, the mixed-integer MPC with LSTM demonstrated better performance than the widely used triggered irrigation scheduling approach in terms of water savings and enhancing optimal crop yield. The two approaches were compared in terms of the average solution time of PN,M(d). Additionally, the approaches were compared based on total prescribed irrigation and Irrigation Water Use Efficiency (IWUE), defined."
    },
    {
        "id_": "ba608de2-8ab9-41b7-bb3a-babbdee3dacb",
        "text": "# 7.1 Simulation Settings of Case Study 1\n\nTable 8 of Appendix (C) provides the relevant parameters for the formulation P N,M (d) used in this case study. It is important to note that the per-unit costs were treated as tuning parameters in this study.\n\nIn the mixed-integer MPC with LSTM models, the LSTM models were trained according to the approach proposed in [9]. Specific details for training the LSTM networks are omitted due to space constraints; interested readers may refer to [9] for the specific training details. It is important to note that the same training data were used to train both the LSTM and ReLU neural network models for the three MZs of the study area. Additionally, the ReLU neural network design outlined in the Section 5.2.1 was adopted for the training of the LSTM networks for each MZ. However, the tuning of hyperparameters and the determination of the time lag l for the training of the LSTM and ReLU networks were conducted independently, as each network has different characteristics for achieving optimal performance.\n\nIn both scheduling approaches considered in this study, the simulation period spanned from May 5th to September 4th, for the 2015 and 2022 seasons. Throughout the evaluation process, a rooting depth of 0.5 m was considered from May 5th to July 15th, after which a rooting depth of 1.0 m was used until the end of the growing season. This trajectory of the rooting depth aligns with standard irrigation management for the soft spring wheat crop. A prediction horizon (and control horizon) of 7 days was employed during the evaluation of the two scheduling approaches."
    },
    {
        "id_": "8f9d634a-9a19-4e50-9d02-781fe077ce1c",
        "text": "# Simulation Experiments\n\nSeveral simulation experiments demonstrated that a 7-day prediction horizon effectively captures the essential dynamics of the study area. This period also allows the scheduler to utilize the most accurate weather forecasts available."
    },
    {
        "id_": "605097ef-703f-4cf5-9341-c8f8e840a55d",
        "text": "# Soil Moisture Content\n\nThe initial root zone soil moisture content in the three MZs of the field, required for evaluating the two scheduling approaches, was not assumed to be known. Instead, the study simulated the presence of a remote sensor in each MZ, reflecting the actual field conditions where microwave remote sensors are mounted. These sensors provided daily soil moisture observations corresponding to the average moisture content in the top 25 cm of the soil column. The soil moisture content was estimated from these daily observations using the EKF, which was chosen due to its demonstrated effectiveness in accurately estimating soil moisture content in agro-hydrological systems [31, 32]. The specific EKF design for each MZ is detailed in Appendix E."
    },
    {
        "id_": "494aa350-0749-40ab-884f-490782c7741d",
        "text": "# Evaluation of Scheduling Schemes\n\nOn the first day of the evaluation period, the two scheduling schemes were evaluated using the initial guess of the soil moisture distributions for the various MZs, along with the 7-day weather and crop information predictions. Although the actual weather information for the growing seasons was known during this simulation, uncertainty was incorporated into the weather forecasts used in evaluating the agents and in the MPC. This uncertainty was modeled as a normal distribution with a mean of 0 and a specified standard deviation. As the prediction horizon extended further into the future, the standard deviation values were gradually increased to reflect the growing uncertainty associated with longer-term weather predictions."
    },
    {
        "id_": "628cd0a8-1871-40f3-9f58-0e7956d6b940",
        "text": "# MPC Solutions\n\nThe mixed-integer MPC with ReLU neural networks was solved using the Gurobi solver, while the mixed-integer MPC with LSTM networks was solved using the BONMIN solver. Additionally, the OMLT package [33] in Python was used to translate the trained ReLU neural networks into the MIL constraints, and the resulting MIQP was solved in Pyomo [34]."
    },
    {
        "id_": "14eaded8-9d58-4c48-82eb-f07365fd03ad",
        "text": "# Irrigation Implementation\n\nThe irrigation amounts obtained from solving the two MPCs were implemented in a receding horizon fashion, where the first irrigation amount was applied to the actual field, and the rest were discarded. The actual field conditions were represented using three well-calibrated 1D Richards equations. The initial soil moisture contents in the MZs of the actual field were initialized with the converged soil moisture estimates obtained from the offline state and parameter estimation outlined in Section 6."
    },
    {
        "id_": "07b63bff-baf7-41f1-bf68-45b9f71beeeb",
        "text": "# Measurements and Noise\n\nOn the second day, measurements corresponding to the average soil water content in the top 25 cm were obtained for each MZ from the actual field. To account for sensor noise, noise from a Gaussian distribution with a mean of 0 and a standard deviation of 0.0008 was added to these measurements, reflecting the measurement noise observed in the microwave radiometers mounted on."
    },
    {
        "id_": "9328adb3-cfe1-42b2-b573-d61753b57185",
        "text": "# 7.2 Simulation Settings for Case Study 2\n\nBefore describing the settings under which this study was performed, a brief description of the triggered irrigation scheduling approach is presented.\n\nThe triggered approach aims to maintain the root zone soil moisture within the lower and upper bounds of the target zone (↼, ¯). For MZ ↼ j, an irrigation event is triggered on a day d, when the daily root zone moisture content ϖRZd falls below the lower bound of the target zone. When this occurs, the irrigation amount udirrig is calculated using the following formula [29]:\n\nudirrig = [(¯ → ϖd↼RZ) ↗ zr [ → Pd+4 (15)\n\nwhere Pd+4 indicates the cumulative rainfall that occurs from day d + 1 to d + 4.\n\nThe implementation of the mixed-integer MPC with the ReLU neural network in this case study is the same as its evaluation in Case Study 1. Therefore, this section focuses on the evaluation settings of the triggered scheduling approach for the 2015 and 2022 seasons.\n\nFor both growing seasons, the implementation of the triggered approach spanned from May 5th to September 4th. The rooting depth trajectory, outlined in Section 7.1 is adopted in this study. On the first day of the evaluation period, the triggered scheduling scheme was evaluated with the initial soil moisture distribution estimates for the various MZs, along with the 4-day rainfall prediction.\n\nIn each MZ, the current root zone soil moisture content was compared to the lower bounds of their target soil moisture range. If the root zone soil moisture content in all three MZs remained above their lower bounds, an irrigation amount of 0 was applied to the actual field. However, if the root zone soil moisture content fell below the lower bound in at least one MZ, a non-zero irrigation rate was applied to all MZs. These non-zero irrigation rates were calculated using Equation (15), for all three MZs."
    },
    {
        "id_": "6ac799c2-bbd4-4a50-8cbb-3c25dee5aedb",
        "text": "# 8 Results and Discussion\n\nIn this section, the results of the case studies are presented and analyzed in detail. The section begins with a discussion of the outcomes from the validation experiment conducted on the trained ReLU neural networks. This is followed by a presentation and analysis of the results comparing the mixed-integer MPC with ReLU neural networks to the mixed-integer MPC with LSTM networks. Finally, the section concludes with a detailed discussion of the results comparing the mixed-integer MPC with ReLU neural networks to the triggered irrigation scheduling approach."
    },
    {
        "id_": "4d605b71-0ea3-457d-88df-e90c3e96337c",
        "text": "# 8.1 Predictive Performance of the Identified ReLU Neural Networks\n\nThe results of the evaluation of the predictive performance of the ReLU networks, conducted over a 25-day period, are depicted in Figure 3. From this figure, the soil moisture predictions can be considered accurate, as there is a strong agreement between the predicted root zone soil moisture content and the actual values derived from the calibrated 1D Richards equation. This accuracy is further confirmed by the low RMSE values shown in Table 1, which highlight the good predictive capacity of the ReLU neural networks for root zone soil moisture content across all three MZs.\n\nThe results demonstrate that the proposed ReLU neural network modeling approach for root zone soil moisture in the MZs of the study area is effective. These findings are consistent with other studies that have utilized ReLU neural networks to describe soil moisture dynamics in agro-hydrological systems [14, 15]. Furthermore, these results suggest that the ReLU neural networks’ capacity for universal approximation can be leveraged to directly model root zone soil moisture content, potentially enhancing computational efficiency when employed in schedulers that require the solution of a numerical optimization problem. This approach contrasts with earlier methods [29], where separate neural network models were trained to predict soil moisture content at different depths within the soil profile, and a weighted approach was subsequently used to estimate root zone soil moisture content from these predictions.\n\nThe results obtained from the validation experiment further highlight the accuracy of the identified..."
    },
    {
        "id_": "898fdfc8-ce97-44ef-a341-52e3c04cd898",
        "text": "# 8.2 Comparison of PN,M(d) with ReLU and PN,M(d) LSTM Approaches\n\nIn this experiment, the ReLU networks, originally trained to perform one-step-ahead predictions, were employed recursively over a 25-day period. This recursive strategy involved using the output from one time step as an input for the next. This property is particularly desirable in MPC frameworks because MPC relies on the ability to make accurate predictions over the prediction horizon to determine optimal control actions."
    },
    {
        "id_": "9aa2e0a9-152c-4e84-a13d-4fcb1014af73",
        "text": "# Figure 3: Predictive performance of the identified ReLU neural networks.\n\n|Year|Total Irrigation|IWUE|Average Solution Time|\n|---|---|---|---|\n|2015| | | |\n|2022| | | |"
    },
    {
        "id_": "7e820495-5521-4a4c-b07a-802f88579df3",
        "text": "# Table 1: Predictive performance of the trained ReLU Neural Networks over a period of 25 days.\n\n|Model|RMSE|\n|---|---|\n|MZ 1|0.0028|\n|MZ 2|0.0025|\n|MZ 3|0.0022|"
    },
    {
        "id_": "be27b466-44da-49ef-b399-bd9324d59bd8",
        "text": "# 1. 2015 Season\n\nFor the 2015 season (Table 2), which represents a relatively dry period, the total irrigation required for both the ReLU and LSTM approaches is almost identical (0.983 m for ReLU vs. 0.984 m for LSTM). The IWUE is slightly higher for the LSTM approach (8.84 kg/m3) compared to the ReLU approach (8.63 kg/m3). However, the ReLU neural network shows a significant computational advantage, reducing the average solution time of P N,M (d) from 107.5 minutes (LSTM) to 0.44 minutes (ReLU), which represents a reduction of approximately 99.6%."
    },
    {
        "id_": "c58a5562-7dd4-4274-8ed7-bfb49dad2bde",
        "text": "# 2. 2022 Season\n\nFor the 2022 season (Table 3), which represents a relatively wet period, the total irrigation required is slightly lower for the ReLU approach (0.761 m) compared to the LSTM approach (0.790 m). The IWUE for both approaches is very similar, with 10.65 kg/m3 for ReLU and 10.71 kg/m3 for LSTM. The ReLU approach again shows a significant reduction in computational time, with an average solution time of 0.52 minutes compared to 82 minutes for the LSTM, translating to a reduction of approximately 99.4%.\n\nThese results confirm that exploiting ReLU neural networks and their MIL representation significantly enhances the computational efficiency of the mixed-integer MPC-based irrigation scheduling. The ReLU-based approach achieves a significant reduction in solution time—around 99.6% and 99.4% for the 2015 and 2022 seasons, respectively—while maintaining comparable levels of total prescribed irrigation and IWUE. This significant improvement in computational efficiency makes the ReLU-based model a more suitable option for real-time irrigation scheduling without compromising irrigation performance.\n\nIt has been reported in [35] that there exist MIL representations for sigmoid and hyperbolic activation functions, albeit in an inexact manner. Since the LSTM network primarily comprises sigmoid and hyperbolic activation functions, an inexact MIL approximation can be employed to represent the LSTM network in P N,M (d). However, due to the inexact nature of this representation, the accuracy and computational efficiency of the resulting formulation may also be compromised compared to the exact MIL formulation for ReLU networks.\n\nDespite this, the ReLU approach remains an attractive alternative over the LSTM approach. This is due to the fact that training a ReLU neural network has been reported to be more efficient."
    },
    {
        "id_": "e10c5291-ea07-47b6-95d7-5183fb820e53",
        "text": "# Table 2: Comparison between the P N,M (d) with LSTM and P N,M (d) with ReLU neural network for the 2015 season.\n\n| |P N,M (d) with LSTM|P N,M (d) with ReLU|\n|---|---|---|\n|Total irrigation (m)|0.984|0.983|\n|IWUE (kg/m3)|8.84|8.63|\n|Average solution time of P N,M (d) (minutes)|107.5|0.44|"
    },
    {
        "id_": "f0d0c26e-f9a9-4660-a2dd-804dffa24b11",
        "text": "# Table 3: Comparison between the P N,M (d) with LSTM and P N,M (d) with ReLU neural network for the 2022 season.\n\n| |P N,M (d) with LSTM|P N,M (d) with ReLU|\n|---|---|---|\n|Total irrigation (m)|0.790|0.761|\n|IWUE (kg/m3)|10.71|10.65|\n|Average solution time of P N,M (d) (minutes)|82|0.52|\n\nfrom a computational standpoint compared to training an LSTM network [36]. However, future studies will be needed to compare the performance of the MIL representations of LSTM and ReLU neural networks in the irrigation scheduling setting to better understand their relative strengths and limitations."
    },
    {
        "id_": "10427604-6cdb-4599-9eab-a1626dae7cb4",
        "text": "# 8.3 Comparison of P N,M (d) with ReLU and Triggered Approaches\n\nTables 4 and 5 provide a comparison between the ReLU-based scheduling approach and the traditional triggered irrigation scheduling approach in terms of total irrigation and Irrigation Water Use Efficiency (IWUE) for the 2015 and 2022 growing seasons.\n\nFor the 2015 season (Table 4), which represents a relatively dry period with a total rainfall of 14.7 mm, the total irrigation required by the ReLU-based approach is 0.983 m, representing a reduction of approximately 9.8% compared to the 1.09 m required by the triggered approach. The ReLU approach also demonstrates an enhanced IWUE of 8.63 kg/m3, which is an improvement of approximately 14.6% over the triggered approach’s IWUE of 7.53 kg/m3.\n\nFor the 2022 season (Table 5), which represents a relatively wet period with a total rainfall of 230.9 mm, the ReLU-based approach requires 0.761 m of total irrigation, a reduction of about 21.6% compared to the 0.97 m required by the triggered approach. The IWUE for the ReLU approach is 10.65 kg/m3, reflecting an enhancement of approximately 36.9% over the IWUE of 7.78 kg/m3 for the triggered approach.\n\nAdditionally, as illustrated in Figures 4 and 5, the ReLU-based approach more effectively maintains soil moisture levels within the optimal range across both seasons, with fewer and more con-"
    },
    {
        "id_": "27840b54-e953-44dd-be3c-6497fe0aa70f",
        "text": "# Table 4: Comparison between the triggered and P N,M (d) with ReLU neural network for the 2015 season.\n\n| |P N,M (d) with ReLU|Triggered|\n|---|---|---|\n|Total irrigation (m)|0.983|1.09|\n|IWUE (kg/m3)|8.63|7.53|\n\nThese results, combined with the ReLU approach’s significantly enhanced solution time, highlight its potential as an attractive option for real-time irrigation scheduling."
    },
    {
        "id_": "8dbf58a6-b4c3-425d-a302-d629c85b02fc",
        "text": "# Figure 4: Prescribed irrigation schedules and the trajectories of root zone soil moisture content for the 2015 season."
    },
    {
        "id_": "90b8f2b1-c73a-476a-b925-80d8ee4b23e0",
        "text": "# 9 Conclusion\n\nIn conclusion, this study demonstrates the use of ReLU surrogate models to enhance the computational efficiency of mixed-integer Model Predictive Control (MPC)-based irrigation schedulers. By leveraging the mixed-integer linear representation of the ReLU operator, the proposed approach transforms the mixed-integer MPC-based scheduler, which features a quadratic cost function, into a Mixed-Integer Quadratic Program (MIQP). The MIQP represents the simplest class of mixed-"
    },
    {
        "id_": "00ff7735-dc5b-4595-8917-9e92b4691f47",
        "text": "# Figure 5\n\nPrescribed irrigation schedules and the trajectories of root zone soil moisture content for the 2022."
    },
    {
        "id_": "1970495b-d2db-4eeb-acb5-f2e5bf231582",
        "text": "# Table 5\n\nComparison between the triggered and P N,M (d) with ReLU neural network for the 2022 season.\n\n| |P N,M (d) with ReLU|Triggered|\n|---|---|---|\n|Total irrigation (m)|0.761|0.97|\n|IWUE (kg/m3)|10.65|7.78|\n\nInteger nonlinear programming problems, for which global optimization solvers exist. A case study involving other machine learning surrogate models, specifically the Long Short-Term Memory (LSTM) network, showed that the proposed ReLU-based approach significantly reduces the solution time without compromising the water-saving benefits or the Irrigation Water Use Efficiency (IWUE) enhancement previously established by the mixed-integer MPC-based irrigation scheduler. Additionally, a comparative study with the widely used triggered irrigation scheduling approach demonstrated that the ReLU-based method offers enhanced performance in terms of both total irrigation and IWUE.\n\nThese findings confirm that the ReLU-based approach enhances the computational efficiency while maintaining the effectiveness of mixed-integer MPC-based irrigation schedulers, making it a practical and efficient solution for real-time irrigation management in large-scale agricultural."
    },
    {
        "id_": "5594825b-f4e6-41a7-b39b-567e16de80a4",
        "text": "# settings.\n\nDespite the promise demonstrated by the proposed approach, several modifications could be made to further enhance its effectiveness. For instance, using estimated hydraulic parameters, derived from an offline parameter estimation approach, as a basis for identifying the ReLU neural network models, plays an important role in reducing parametric uncertainty and effectively addressing plant-model mismatch within scheduler. While this offline strategy provides a good foundation for the real-time implementation of the scheduler, it has limitations in adapting to real-time variations in parameters of the field. To address this limitation, an offset-free MPC approach could be adopted by incorporating a disturbance model. The design of an offset-free MPC, as discussed in [37], could serve as a helpful reference in this regard."
    }
]